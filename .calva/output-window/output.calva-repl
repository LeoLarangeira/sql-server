; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+o o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 
; Starting Jack-in Terminal: pushd /home/leonardo/Desktop/sql-server ; lein update-in :dependencies conj '[nrepl,"1.0.0"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.28.5"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- with-profile +uberjar repl :headless ; popd
; Using host:port 127.0.0.1:34403 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉sql-server.core꞉>  ; Use `alt+enter` to evaluate
clj꞉sql-server.core꞉> 
; Jack-in done.
clj꞉sql-server.core꞉> 
; Execution error (SQLiteException) at org.sqlite.core.DB/newSQLException (DB.java:1179).
; [SQLITE_ERROR] SQL error or missing database (no such function: last_insert_row)
clj꞉sql-server.crud.insert꞉> 
nil
clj꞉sql-server.crud.insert꞉> 
; Execution error (SQLiteException) at org.sqlite.core.DB/newSQLException (DB.java:1179).
; [SQLITE_ERROR] SQL error or missing database (no such function: last_insert_row)
clj꞉sql-server.crud.insert꞉> 
; Execution error (SQLiteException) at org.sqlite.core.DB/newSQLException (DB.java:1179).
; [SQLITE_ERROR] SQL error or missing database (no such function: last_insert_row)
clj꞉sql-server.crud.insert꞉> 
; Execution error (IllegalArgumentException) at honeysql.format/comma-join (format.cljc:13).
; Don't know how to create ISeq from: clojure.lang.Keyword
clj꞉sql-server.crud.insert꞉> 
nil
clj꞉sql-server.crud.insert꞉> 
; Execution error (IllegalArgumentException) at honeysql.format/comma-join (format.cljc:13).
; Don't know how to create ISeq from: clojure.lang.Keyword
clj꞉sql-server.crud.insert꞉> 
; Execution error (IllegalArgumentException) at honeysql.format/comma-join (format.cljc:13).
; Don't know how to create ISeq from: clojure.lang.Keyword
clj꞉sql-server.crud.insert꞉> 
; Execution error (IllegalArgumentException) at honeysql.format/comma-join (format.cljc:13).
; Don't know how to create ISeq from: clojure.lang.Keyword
clj꞉sql-server.crud.insert꞉> 
; Execution error (IllegalArgumentException) at honeysql.format/comma-join (format.cljc:13).
; Don't know how to create ISeq from: clojure.lang.Keyword
clj꞉sql-server.crud.insert꞉> 
; Execution error (IllegalArgumentException) at honeysql.format/comma-join (format.cljc:13).
; Don't know how to create ISeq from: clojure.lang.Keyword
clj꞉sql-server.crud.insert꞉> 
["SELECT count, * FROM user"]
clj꞉sql-server.crud.insert꞉> 
; Execution error (SQLiteException) at org.sqlite.core.DB/newSQLException (DB.java:1179).
; [SQLITE_ERROR] SQL error or missing database (no such column: count)
clj꞉sql-server.crud.insert꞉> 
["SELECT * FROM user "]
clj꞉sql-server.crud.insert꞉> 
["SELECT count, * FROM user"]
clj꞉sql-server.crud.insert꞉> 
; Execution error (AssertionError) at honeysql.format/seq->sql (format.cljc:385).
; Assert failed: Alias should have two parts[:*]
; (= 2 (count x))
clj꞉sql-server.crud.insert꞉> 
["SELECT count, * FROM user"]
clj꞉sql-server.crud.insert꞉> 
["SELECT count, ? FROM user" #function[clojure.core/*]]
clj꞉sql-server.crud.insert꞉> 
; Execution error (AssertionError) at honeysql.format/seq->sql (format.cljc:385).
; Assert failed: Alias should have two parts[:*]
; (= 2 (count x))
clj꞉sql-server.crud.insert꞉> 
; Execution error (AssertionError) at honeysql.format/seq->sql (format.cljc:385).
; Assert failed: Alias should have two parts[:*]
; (= 2 (count x))
clj꞉sql-server.crud.insert꞉> 
["SELECT count, * FROM user"]
clj꞉sql-server.crud.insert꞉> 
["SELECT * FROM user"]
clj꞉sql-server.crud.insert꞉> 
["SELECT * FROM user"]
clj꞉sql-server.crud.insert꞉> 
; Execution error (SQLException) at org.sqlite.jdbc3.JDBC3PreparedStatement/executeLargeUpdate (JDBC3PreparedStatement.java:108).
; Query returns results
clj꞉sql-server.crud.insert꞉> 
["SELECT count AS * FROM user"]
clj꞉sql-server.crud.insert꞉> 
; Execution error (IllegalArgumentException) at honeysql.format/comma-join (format.cljc:13).
; Don't know how to create ISeq from: clojure.lang.Keyword
clj꞉sql-server.crud.insert꞉> 
["SELECT count, id_user FROM user"]
clj꞉sql-server.crud.insert꞉> 
; Execution error (AssertionError) at honeysql.format/seq->sql (format.cljc:385).
; Assert failed: Alias should have two parts[:id_user]
; (= 2 (count x))
clj꞉sql-server.crud.insert꞉> 
; Execution error (IllegalArgumentException) at honeysql.format/comma-join (format.cljc:13).
; Don't know how to create ISeq from: clojure.lang.Keyword
clj꞉sql-server.crud.insert꞉> 
; Syntax error compiling at (src/sql_server/crud/insert.clj:8:3).
; Unable to resolve symbol: email in this context
clj꞉sql-server.crud.insert꞉> 
nil
; WARNING: update already refers to: #'clojure.core/update in namespace: sql-server.crud.insert, being replaced by: #'honeysql.helpers/update
clj꞉sql-server.crud.insert꞉> 
; Execution error (IllegalArgumentException) at honeysql.format/comma-join (format.cljc:13).
; Don't know how to create ISeq from: clojure.lang.Keyword
clj꞉sql-server.crud.insert꞉> 
["SELECT count, * FROM user"]
clj꞉sql-server.crud.insert꞉> 
; Syntax error compiling at (src/sql_server/crud/insert.clj:8:1).
; Unable to resolve symbol: email in this context
clj꞉sql-server.crud.insert꞉> 
nil
clj꞉sql-server.crud.update꞉> 
; Syntax error compiling at (src/sql_server/crud/update.clj:6:1).
; No such namespace: sql
clj꞉sql-server.crud.update꞉> 
["UPDATE transport SET name = ? WHERE id = ?" "Yacht" 2]
clj꞉sql-server.crud.update꞉> 
#'sql-server.crud.update/name
; WARNING: name already refers to: #'clojure.core/name in namespace: sql-server.crud.update, being replaced by: #'sql-server.crud.update/name
clj꞉sql-server.crud.update꞉> 
["UPDATE user SET name = ? WHERE id = ?" "Leo" 2]
clj꞉sql-server.crud.update꞉> 
; Syntax error compiling at (src/sql_server/crud/update.clj:12:24).
; Unable to resolve symbol: id in this context
clj꞉sql-server.crud.update꞉> 
; Syntax error compiling at (src/sql_server/crud/search.clj:28:34).
; Unable to resolve symbol: query in this context
clj꞉sql-server.crud.search꞉> 
nil
clj꞉sql-server.crud.search꞉> 
; Syntax error compiling at (src/sql_server/crud/search.clj:28:34).
; Unable to resolve symbol: query in this context
clj꞉sql-server.crud.search꞉> 
; Syntax error compiling at (src/sql_server/crud/search.clj:28:34).
; Unable to resolve symbol: query in this context
clj꞉sql-server.crud.search꞉> 
["SELECT * FROM user WHERE id = ?" 2]
clj꞉sql-server.crud.search꞉> 
; Syntax error compiling at (src/sql_server/crud/search.clj:30:34).
; Unable to resolve symbol: query in this context
clj꞉sql-server.crud.search꞉> 
; Syntax error compiling at (src/sql_server/crud/search.clj:30:34).
; Unable to resolve symbol: query in this context
clj꞉sql-server.crud.search꞉> 
["SELECT * FROM user WHERE id = ?" 2]
clj꞉sql-server.crud.search꞉> 
